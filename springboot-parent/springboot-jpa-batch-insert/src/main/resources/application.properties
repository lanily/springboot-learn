logging.level.ROOT=INFO
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.transaction=DEBUG

logging.level.jdbc.sqlonly=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.sqltiming=fatal
logging.level.jdbc.audit=fatal
logging.level.jdbc.resultset=fatal
logging.level.jdbc.connection=fatal

# H2
# url: jdbc:h2:file:./h2/generatorDB;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;MODE=MYSQL;AUTO_RECONNECT=TRUE
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springboot_learn?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false?cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root

###############################
#关于将INSERT语句转换成这样的内容：
#INSERT INTO table VALUES (1, 2), (3, 4), (5, 6)
#postgresql中提供了这样的选项：您可以在jdbc连接字符串中将选项reWriteBatchedInserts设置为true：
#jdbc:postgresql://localhost:5432/db?reWriteBatchedInserts=true
###############################

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.open-in-view=false

spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# org.hibernate.dialect.MySQL5InnoDBDialect
# For MySQL8, use org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb

# 输出执行情况
spring.jpa.properties.hibernate.generate_statistics=true
# 开启批量插入
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
# this is needed for ordering inserts in case of relationships
# spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
